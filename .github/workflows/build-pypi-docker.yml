name: Tag creation

on:
    push:
        tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
    pypi:
        runs-on: self-hosted
        steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'
        - name: Update VERSION file
          run: echo "${{  github.ref_name }}" | cut -c 2- > VERSION
        - name: Install dependencies
          env:
            PIP_USERNAME: ${{ secrets.PIP_USERNAME }}
            PIP_PASSWORD: ${{ secrets.PIP_PASSWORD }}
            PIP_INDEX_EXTRA_URL_REMAINDER: ${{ secrets.PIP_INDEX_EXTRA_URL_REMAINDER }}
            PIP_PROTOCOL: ${{ secrets.PIP_PROTOCOL }}
          run: |
            python -m pip install --upgrade pip
            pip install -e . --no-cache-dir \
              --extra-index-url $PIP_PROTOCOL://$PIP_USERNAME:$PIP_PASSWORD@$PIP_INDEX_EXTRA_URL_REMAINDER \
              --trusted-host $PIP_INDEX_EXTRA_URL_REMAINDER
            python -m pip freeze > requirements.txt
            python -m pip download -d package_requirements -r requirements.txt --only-binary=:all:
        - name: Upload package_requirements
          uses: actions/upload-artifact@v2
          with:
            name: package_requirements
            path: package_requirements
        - name: Build and publish
          run: |
            pip install -e '.[build,publish]'
            python -m build
            twine upload --verbose \
              --repository-url $PIP_PROTOCOL://$PIP_INDEX_EXTRA_URL_REMAINDER \
              -u $PIP_USERNAME -p $PIP_PASSWORD dist/*
        - name: Upload dist
          uses: actions/upload-artifact@v2
          with:
            name: dist
            path: dist
    docker:
        needs: pypi
        runs-on: self-hosted
        steps:
        - uses: actions/checkout@v2
        - name: Download dist
          uses: actions/download-artifact@v2
          with:
            name: dist
            path: dist
        - name: Download package_requirements
          uses: actions/download-artifact@v2
          with:
            name: package_requirements
            path: package_requirements
        - name: Update VERSION file
          run: echo "${{  github.ref_name }}" | cut -c 2- > VERSION
        - name: Build docker image
          env:
            DOCKER_HUB_URL: ${{ secrets.DOCKER_HUB_URL }}
          run: |
            docker build -t ${{ secrets.DOCKER_HUB_URL }}/${{ github.event.repository.name }}:$(cat VERSION) \
             --progress=plain \
             --no-cache \
             --network=host \
             .
        - name: Push docker image
          run: |
            docker push ${{ secrets.DOCKER_HUB_URL }}/${{ github.event.repository.name }}:$(cat VERSION)
        - name: Delete docker image
          run: |
            docker rmi ${{ secrets.DOCKER_HUB_URL }}/${{ github.event.repository.name }}:$(cat VERSION)
        